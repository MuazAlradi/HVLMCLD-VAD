{
  "method": "weakly_sup",
  "description": "Weakly Supervised Multiple Instance Learning for Anomaly Detection",
  "data_path": "./data",
  "dataset": "ucf_crime",
  "input_dim": 10752,
  "epochs": 150,
  "n_trials": 100,
  "hyperparameters": {
    "dropout": {
      "type": "float",
      "min": 0.0,
      "max": 0.9,
      "description": "Dropout probability for regularization"
    },
    "lr": {
      "type": "loguniform",
      "min": 1e-5,
      "max": 1e-1,
      "description": "Learning rate for optimizer"
    },
    "weight_decay": {
      "type": "loguniform",
      "min": 1e-5,
      "max": 1e-2,
      "description": "Weight decay for L2 regularization"
    }
  },
  "training": {
    "batch_size": 30,
    "test_batch_size": 1,
    "optimizer": "Adagrad",
    "scheduler": {
      "type": "MultiStepLR",
      "milestones": [1, 10, 15, 20, 25, 50],
      "gamma": 0.1
    },
    "loss_function": "MIL",
    "bag_size": 33
  },
  "model_architecture": {
    "type": "fully_connected",
    "layers": [
      {
        "type": "Linear",
        "in_features": 10752,
        "out_features": 512
      },
      {
        "type": "ReLU"
      },
      {
        "type": "Dropout",
        "p": "hyperparameter"
      },
      {
        "type": "Linear", 
        "in_features": 512,
        "out_features": 32
      },
      {
        "type": "ReLU"
      },
      {
        "type": "Dropout",
        "p": "hyperparameter"
      },
      {
        "type": "Linear",
        "in_features": 32,
        "out_features": 1
      },
      {
        "type": "Sigmoid"
      }
    ],
    "initialization": "xavier_normal"
  },
  "mil_loss": {
    "sparsity_coefficient": 0.00008,
    "smoothness_coefficient": 0.00008,
    "margin": 1.0,
    "description": "Multiple Instance Learning loss with ranking, sparsity and smoothness constraints"
  },
  "evaluation": {
    "metric": "AUC",
    "direction": "maximize",
    "test_frequency": 1,
    "frame_level_evaluation": true
  },
  "data_format": {
    "input_segments": 32,
    "frames_per_segment": 16,
    "temporal_annotations": true,
    "bag_composition": "anomaly_bags + normal_bags"
  }
}